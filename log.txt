   Compiling hangups v0.0.1 (file:///source)
error[E0382]: use of moved value: `core`
   --> src/lib.rs:257:9
    |
233 |             let req_raw = client.get(auth_uri).and_then(|res| {
    |                                                         ----- value moved (into closure) here
...
257 |         core.run(req).unwrap();
    |         ^^^^ value used here after move
    |
    = note: move occurs because `core` has type `tokio_core::reactor::Core`, which does not implement the `Copy` trait

error: cannot borrow immutable borrowed content as mutable
   --> src/lib.rs:247:115
    |
247 |                     do_auth_step(&mut core, &client, email_uri, &res, &body.as_str(), client_email, client_email, &mut headers);
    |                                                                                                                   ^^^^^^^^^^^^ cannot borrow as mutable

error[E0505]: cannot move out of `res` because it is borrowed
   --> src/lib.rs:240:18
    |
236 |                                 &res.headers()
    |                                  --- borrow of `res` occurs here
...
240 |                 &res.body().for_each(|chunk| {
    |                  ^^^ move out of `res` occurs here

error[E0382]: use of moved value: `core`
   --> src/lib.rs:247:39
    |
246 |                     let core_raw = core;
    |                         -------- value moved here
247 |                     do_auth_step(&mut core, &client, email_uri, &res, &body.as_str(), client_email, client_email, &mut headers);
    |                                       ^^^^ value used here after move
    |
    = note: move occurs because `core` has type `tokio_core::reactor::Core`, which does not implement the `Copy` trait

error[E0382]: use of moved value: `res`
   --> src/lib.rs:247:66
    |
240 |                 &res.body().for_each(|chunk| {
    |                  --- value moved here
...
247 |                     do_auth_step(&mut core, &client, email_uri, &res, &body.as_str(), client_email, client_email, &mut headers);
    |                                                                  ^^^ value used here after move
    |
    = note: move occurs because `res` has type `hyper::client::Response`, which does not implement the `Copy` trait

error[E0382]: use of moved value: `client_email`
   --> src/lib.rs:247:101
    |
247 |                     do_auth_step(&mut core, &client, email_uri, &res, &body.as_str(), client_email, client_email, &mut headers);
    |                                                                                       ------------  ^^^^^^^^^^^^ value used here after move
    |                                                                                       |
    |                                                                                       value moved here
    |
    = note: move occurs because `client_email` has type `std::string::String`, which does not implement the `Copy` trait

error[E0505]: cannot move out of `body` because it is borrowed
   --> src/hangups/mod.rs:125:12
    |
109 |             let post_req = client.request(fresh_request).map_err(|_| ()).and_then(|res| {
    |                                                                                   ----- borrow of `body` occurs here
...
125 |         Ok(body)
    |            ^^^^ move out of `body` occurs here

error: aborting due to 7 previous errors

error: Could not compile `hangups`.

To learn more, run the command again with --verbose.
